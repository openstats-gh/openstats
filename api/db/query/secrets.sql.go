// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: secrets.sql

package query

import (
	"context"
)

const secretCreate = `-- name: SecretCreate :exec
insert into secret(path, key, value)
values ($1, $2, $3)
`

type SecretCreateParams struct {
	Path  string
	Key   string
	Value string
}

func (q *Queries) SecretCreate(ctx context.Context, arg SecretCreateParams) error {
	_, err := q.db.Exec(ctx, secretCreate, arg.Path, arg.Key, arg.Value)
	return err
}

const secretRead = `-- name: SecretRead :one
select value from secret where path = $1 and key = $2
`

type SecretReadParams struct {
	Path string
	Key  string
}

func (q *Queries) SecretRead(ctx context.Context, arg SecretReadParams) (string, error) {
	row := q.db.QueryRow(ctx, secretRead, arg.Path, arg.Key)
	var value string
	err := row.Scan(&value)
	return value, err
}

const secretWrite = `-- name: SecretWrite :exec
update secret
    set value = $1
where path = $2 and key = $3
`

type SecretWriteParams struct {
	Value string
	Path  string
	Key   string
}

func (q *Queries) SecretWrite(ctx context.Context, arg SecretWriteParams) error {
	_, err := q.db.Exec(ctx, secretWrite, arg.Value, arg.Path, arg.Key)
	return err
}
